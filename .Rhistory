head(byPerson)
byPerson <- data.frame(byPerson, stringsAsFactors=FALSE)
byPerson$X2 <- strsplit(byPerson$X2, " ")
byPerson$Village <- strsplit(byPerson$Village, " ")
head(byPerson)
str(byPerson)
byPerson$Village <- strsplit(as.character(byPerson$Village), " ")
head(byPerson)
for (f in 1:length(byPerson[,1]) ) byPerson$Lang[f] <- byPerson$Village[f][[1]][1]
for (z in 1:length(byPerson[,1]) ) byPerson$Year[z] <- byPerson$Village[z][[1]][2]
byPerson <- byPerson[, c(1,3,4)]
people <- unique(byPerson$Village)
byPersonK <- NULL
for (o in people) {
subset <- byPerson[byPerson$Village==o, ]
subset <- subset[order(-as.numeric(subset$Year)),]
byPersonK <- rbind(byPersonK, subset[1,])
}
notready2 <- merge(notready, byPersonK, by.x="ID", by.y="ID", all=TRUE)
notready2 <- merge(notready, byPersonK, by="ID", all=TRUE)
?merge
head(notready)
head(byPersonK)
byPersonK <- NULL
for (o in people) {
subset <- byPerson[byPerson$Village==o, ]
subset <- subset[order(-as.numeric(subset$Year)),]
byPersonK <- rbind(byPersonK, subset[1,])
}
people <- unique(byPerson$Village)
byPerson$Village <- strsplit(as.character(byPerson$Village), " ")
for (f in 1:length(byPerson[,1]) ) byPerson$Lang[f] <- byPerson$Village[f][[1]][1]
byPerson <- NULL
for (b in 1:length(df[,1]) ) {
for (c in 1:length(df$Village[b][[1]])) {
row <- data.frame(ID=df$ID[b], Village=df$Village[b][[1]][c])
byPerson <- rbind(byPerson, row)
}
}
byPerson <- data.frame(byPerson, stringsAsFactors=FALSE)
head(byPerson)
byPerson$Village <- strsplit(as.character(byPerson$Village), " ")
for (f in 1:length(byPerson[,1]) ) byPerson$Lang[f] <- byPerson$Village[f][[1]][1]
for (z in 1:length(byPerson[,1]) ) byPerson$Year[z] <- byPerson$Village[z][[1]][2]
head(byPerson)
byPerson <- byPerson[, c(1,3,4)]
head(byPerson)
people <- unique(byPerson$ID)
byPersonK <- NULL
for (o in people) {
subset <- byPerson[byPerson$ID==o, ]
subset <- subset[order(-as.numeric(subset$Year)),]
byPersonK <- rbind(byPersonK, subset[1,])
}
head(byPersonK)
notready2 <- merge(notready, byPersonK, by="ID", all=TRUE)
notready2$CLV <- notready2$Lang
notready2 <- notready2[ , 1:14]
final <- rbind(ready, notready2)
final <- final[,1:13]
head(final)
table(final$CLV)
View(byPersonK)
table(byPersonK$Lang)
byPerson <- NULL
for (b in 1:length(df[,1]) ) {
for (c in 1:length(df$Village[b][[1]])) {
row <- data.frame(ID=df$ID[b], Village=df$Village[b][[1]][c])
byPerson <- rbind(byPerson, row)
}
}
byPerson <- data.frame(byPerson, stringsAsFactors=FALSE)
byPerson$Village <- gsub("Attended|First Year", "", as.character(byPerson$Village))
byPerson$Village <- strsplit(as.character(byPerson$Village), " ")
for (f in 1:length(byPerson[,1]) ) byPerson$Lang[f] <- byPerson$Village[f][[1]][1]
for (z in 1:length(byPerson[,1]) ) byPerson$Year[z] <- byPerson$Village[z][[1]][2]
byPerson <- byPerson[, c(1,3,4)]
people <- unique(byPerson$ID)
byPersonK <- NULL
for (o in people) {
subset <- byPerson[byPerson$ID==o, ]
subset <- subset[order(-as.numeric(subset$Year)),]
byPersonK <- rbind(byPersonK, subset[1,])
}
# merge back into original file
notready2 <- merge(notready, byPersonK, by="ID", all=TRUE)
notready2$CLV <- notready2$Lang
notready2 <- notready2[ , 1:14]
final <- rbind(ready, notready2)
final <- final[,1:13]
table(final$CLV)
byPerson <- NULL
for (b in 1:length(df[,1]) ) {
for (c in 1:length(df$Village[b][[1]])) {
row <- data.frame(ID=df$ID[b], Village=df$Village[b][[1]][c])
byPerson <- rbind(byPerson, row)
}
}
byPerson <- data.frame(byPerson, stringsAsFactors=FALSE)
View(byPerson)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
b
c
head(df)
df$Village<- strsplit(df$Village, "; ")
str(df)
source('~/.active-rstudio-document', echo=TRUE)
df$Village<- strsplit(as.character(df$Village), "; ")
head(df)
str(df)
row <- data.frame(ID=df$ID[b], Village=df$Village[b][[1]][c])
df$I[b]
df$ID[b]
df[334,]
df[335,]
df[3,
]
View(df)
clv <- read.csv("CLV_Contacts_2.csv", stringsAsFactors=FALSE)
clv <- clv[c(1:(length(clv[,1])-5)), ]
colnames(clv) <- c("ID", "First", "Last", "Address", "Address.2", "City", "State", "Zip", "Country", "Email", "Contact.Status", "Substatus", "CLV", "Village")
# separate into contacts with straightforward village (ready) and multiple (not ready)
ready <- clv[clv$CLV!="", ]
notready <- clv[clv$CLV=="", ]
# keep first village or ready contacts
ready$CLV <- strsplit(ready$CLV, "; ")
for (i in 1:length(ready[,1]) ) ready$CLV[i] <- ready$CLV[i][[1]][1]
ready$CLV <- unlist(ready$CLV)
# split apart villages
df <- notready[ , c(1,14)]
df$Village<- strsplit(as.character(df$Village), "; ")
byPerson <- NULL
for (b in 1:length(df[,1]) ) {
for (c in 1:length(df$Village[b][[1]])) {
row <- data.frame(ID=df$ID[b], Village=df$Village[b][[1]][c])
byPerson <- rbind(byPerson, row)
}
}
byPerson <- data.frame(byPerson, stringsAsFactors=FALSE)
# split the year out from the village so we can sort for the newest
byPerson$Village <- strsplit(as.character(byPerson$Village), " ")
for (f in 1:length(byPerson[,1]) ) byPerson$Lang[f] <- byPerson$Village[f][[1]][1]
for (z in 1:length(byPerson[,1]) ) byPerson$Year[z] <- byPerson$Village[z][[1]][2]
byPerson <- byPerson[, c(1,3,4)]
people <- unique(byPerson$ID)
byPersonK <- NULL
for (o in people) {
subset <- byPerson[byPerson$ID==o, ]
subset <- subset[order(-as.numeric(subset$Year)),]
byPersonK <- rbind(byPersonK, subset[1,])
}
# merge back into original file
notready2 <- merge(notready, byPersonK, by="ID", all=TRUE)
notready2$CLV <- notready2$Lang
notready2 <- notready2[ , 1:14]
final <- rbind(ready, notready2)
final <- final[,1:13]
table(final$CLV)
write.csv(final, "cleaned_CLV.csv", row.names=FALSE)
village.names <- data.frame(Lang=c("Arabic", "Chinese", "Danish", "Finnish", "French", "German", "Italian", "Japanese",
"Korean", "Norwegian", "Portuguese", "Russian", "Spanish", "Swedish", "English"),
Name=c("Arabic village", "Chinese village", "Skovsøen", "Salolampi", "Lac du Bois", "Waldsee",
"Lago del Bosco", "Mori no Ike", "Korean village", "Skogfjorden", "Mar e Floresta",
"Lesnoe Ozero", "El Lago del Bosque", "Sjölunden", "Collegetown Prep"))
village.names
final <- final[,1:13]
head(final)
j <- 2
mylang <- final[j,13]
myvillage <- village.names[village.names$Lang==mylang, ]
myvillage
final$Village.Name[j] <- myvillage$Name
final$Village.Name <- ""
for(j in seq_along(final[,1]) {
mylang <- final[j,13]
myvillage <- village.names[village.names$Lang==mylang, ]
final$Village.Name[j] <- myvillage$Name
}
for(j in seq_along(final[,1]) {
mylang <- final[j,13]
myvillage <- village.names[village.names$Lang==mylang, ]
final$Village.Name[j] <- myvillage$Name
}
for(j in seq_along(final[,1])) {
mylang <- final[j,13]
myvillage <- village.names[village.names$Lang==mylang, ]
final$Village.Name[j] <- myvillage$Name
}
final$Village.Name[j] <- myvillage[1,2]
final$Village.Name <- ""
for(j in seq_along(final[,1])) {
mylang <- final[j,13]
myvillage <- village.names[village.names$Lang==mylang, ]
final$Village.Name[j] <- myvillage[1,2]
}
head(Final)
head(final)
myvillage <- village.names[village.names$Lang==mylang, 2]
myvillage <- as.character(village.names[village.names$Lang==mylang, 2])
final$Village.Name <- ""
for(j in seq_along(final[,1])) {
mylang <- final[j,13]
myvillage <- as.character(village.names[village.names$Lang==mylang, 2])
final$Village.Name[j] <- myvillage
}
mylang <- final[j,13]
final <- final[final$CLV!="First Year",]
final$Village.Name <- ""
for(j in seq_along(final[,1])) {
mylang <- final[j,13]
myvillage <- as.character(village.names[village.names$Lang==mylang, 2])
final$Village.Name[j] <- myvillage
}
table(final$Village.Name, final$CLV)
write.csv(final, "cleaned_CLV.csv", row.names=FALSE)
final <- final[,c(1:9, 13:14)]
source('~/Downloads/clean_CLV.R', echo=TRUE)
write.csv(final, "cleaned_CLV.csv", row.names=FALSE)
source('~/.active-rstudio-document', echo=TRUE)
table(final$CLV)
setwd("/Users/kwalker/Desktop/")
clv <- read.csv("CLV_2017s.csv", stringsAsFactors=FALSE)
clv <- clv[c(1:(length(clv[,1])-5)), ]
colnames(clv) <- c("ID", "First", "Last", "Address", "Address.2", "City", "State", "Zip", "Country", "Email", "Contact.Status", "Substatus", "CLV", "Village")
# separate into contacts with straightforward village (ready) and multiple (not ready)
ready <- clv[clv$CLV!="", ]
notready <- clv[clv$CLV=="", ]
# keep first village or ready contacts
ready$CLV <- strsplit(ready$CLV, "; ")
for (i in 1:length(ready[,1]) ) ready$CLV[i] <- ready$CLV[i][[1]][1]
ready$CLV <- unlist(ready$CLV)
# split apart villages
df <- notready[ , c(1,14)]
df$Village<- strsplit(as.character(df$Village), "; ")
# get into a dataframe with multiple lines per person
byPerson <- NULL
for (b in 1:length(df[,1]) ) {
for (c in 1:length(df$Village[b][[1]])) {
row <- data.frame(ID=df$ID[b], Village=df$Village[b][[1]][c])
byPerson <- rbind(byPerson, row)
}
}
byPerson <- data.frame(byPerson, stringsAsFactors=FALSE)
# split the year out from the village so we can sort for the newest
byPerson$Village <- strsplit(as.character(byPerson$Village), " ")
for (f in 1:length(byPerson[,1]) ) byPerson$Lang[f] <- byPerson$Village[f][[1]][1]
for (z in 1:length(byPerson[,1]) ) byPerson$Year[z] <- byPerson$Village[z][[1]][2]
byPerson <- byPerson[, c(1,3,4)]
people <- unique(byPerson$ID)
byPersonK <- NULL
for (o in people) {
subset <- byPerson[byPerson$ID==o, ]
subset <- subset[order(-as.numeric(subset$Year)),]
byPersonK <- rbind(byPersonK, subset[1,])
}
# merge back into original file
notready2 <- merge(notready, byPersonK, by="ID", all=TRUE)
notready2$CLV <- notready2$Lang
notready2 <- notready2[ , 1:14]
final <- rbind(ready, notready2)
final <- final[,1:13]
head(final)
tail(final)
table(final$CLV)
village.names <- data.frame(Lang=c("Arabic", "Chinese", "Danish", "Finnish", "French", "German", "Italian", "Japanese",
"Korean", "Norwegian", "Portuguese", "Russian", "Spanish", "Swedish", "English"),
Name=c("the Arabic village", "the Chinese village", "the Danish village", "Salolampi", "Lac du Bois", "Waldsee",
"Lago del Bosco", "Mori no Ike", "the Korean village", "Skogfjorden", "Mar e Floresta",
"Lesnoe Ozero", "El Lago del Bosque", "Sjolunden", "Collegetown Prep"))
final <- final[final$CLV!="First Year",]
final$Village.Name <- ""
for(j in seq_along(final[,1])) {
mylang <- final[j,13]
myvillage <- as.character(village.names[village.names$Lang==mylang, 2])
final$Village.Name[j] <- myvillage
}
final <- final[,c(1:9, 13:14)]
j
tail(final)
table(final$Village.Name)
addmargins(table(final$Village.Name))
addMargins(table(final$Village.Name))
addmargins(table(final$Village.Name))
tail(final)
View(final)
source('~/.active-rstudio-document', echo=TRUE)
head(final)
table(final$CLV)
table(final$Village.Name)
write.csv(final, "cleaned_CLV_2017.csv", row.names=FALSE)
source('~/.active-rstudio-document', echo=TRUE)
print(opens)
print(clicks)
overall.rates
kable(overall.rates[ , c(1,4,2,3,5:8)], row.names=FALSE)
library(knitr)
(77386+8117)/(360564+20885)
(4238+799)/(360564+20885)
overall.rates <- rbind(overall.rates, data.frame(Category=c("MailChimp.Events", "MailChimp.NonProfit"), Sent=c(0,0), Opens=(0,0), Clicks=c(0,0), Unsubs=c(0,0), Open.Rate=c(0.2150, 0.2520), Click.Rate=c(0.0239, 0.0284), Unsub.Rate=c(0,0)))
overall.rates <- rbind(overall.rates, data.frame(Category=c("MailChimp.Events", "MailChimp.NonProfit"), Sent=c(0,0), Opens=c(0,0), Clicks=c(0,0), Unsubs=c(0,0), Open.Rate=c(0.2150, 0.2520), Click.Rate=c(0.0239, 0.0284), Unsub.Rate=c(0,0)))
overall.rates
events <- overall.rates[overall.rates$Category %in% c("Alumni", "HC", "Class.Letter", "MailChimp.Events"),]
nonprofit <- overall.rates[overall.rates$Category %in% c("Fund", "Reunion.Giving", "MailChimp.NonProfit"), ]
events
nnonprofit
nonprofit
ggplot(events, aes(Category, Open.Rate))+ geom_bar(stat="identity") + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison")
library(RColorBrewer)
eventsPlot <- ggplot(events, aes(Category, Open.Rate))+ geom_bar(stat="identity") + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison, Open Rate")
ggplot(events, aes(Category, Click.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison, Click Rate")
ggplot(nonprofit, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Nonprofit Industry Comparison, Open Rate")
ggplot(nonprofit, aes(Category, Click.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Nonprofit Industry Comparison, Click Rate")
nonprofit$Category <- factor(nonprofit$Category, levels=nonprofit$Category)
eventsPlotO <- ggplot(events, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison, Open Rate")
eventsPlotC <- ggplot(events, aes(Category, Click.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison, Click Rate")
nonprofitPlotO <- ggplot(nonprofit, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Nonprofit Industry Comparison, Open Rate")
nonprofitPlotC <- ggplot(nonprofit, aes(Category, Click.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Nonprofit Industry Comparison, Click Rate")
grid.arrange(eventsPlotO, eventsPlotC, nonprofitPlotO, nonprofitPlotC, ncol=2)
?geom_hline()
ggplot(events, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison, Open Rate") + geom_hline(yintercept=0.2150)
events <- overall.rates[overall.rates$Category %in% c("Alumni", "HC", "Class.Letter"),]
nonprofit <- overall.rates[overall.rates$Category %in% c("Fund", "Reunion.Giving"), ]
nonprofit$Category <- factor(nonprofit$Category, levels=nonprofit$Category)
eventsPlotO <- ggplot(events, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison, Open Rate") + geom_hline(yintercept=0.2150)
eventsPlotC <- ggplot(events, aes(Category, Click.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison, Click Rate")+ geom_hline(yintercept=0.0239)
nonprofitPlotO <- ggplot(nonprofit, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Nonprofit Industry Comparison, Open Rate")+ geom_hline(yintercept=0.2520)
nonprofitPlotC <- ggplot(nonprofit, aes(Category, Click.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Nonprofit Industry Comparison, Click Rate")+ geom_hline(yintercept=0.0284)
grid.arrange(eventsPlotO, eventsPlotC, nonprofitPlotO, nonprofitPlotC, ncol=2)
events
events <- rbind(events,
data.frame(Category="All", Opens=sum(events$Opens), Clicks=sum(events$Clicks),
Sent=sum(events$Sent), Unusbs=sum(events$Unsubs),
Open.Rate=c(round(sum(events$Opens)/sum(events$Sent), 4)),
Click.Rate=c(round(sum(events$Clicks)/sum(events$Sent), 4)),
Unsub.Rate=c(round(sum(events$Unsubs)/sum(events$Sent), 4))))
events <- rbind(events,
data.frame(Category="All", Opens=sum(events$Opens), Clicks=sum(events$Clicks),
Sent=sum(events$Sent), Unsubs=sum(events$Unsubs),
Open.Rate=c(round(sum(events$Opens)/sum(events$Sent), 4)),
Click.Rate=c(round(sum(events$Clicks)/sum(events$Sent), 4)),
Unsub.Rate=c(round(sum(events$Unsubs)/sum(events$Sent), 4))))
events
events <- overall.rates[overall.rates$Category %in% c("Alumni", "HC", "Class.Letter"),]
events <- rbind(events,
data.frame(Category="All", Opens=sum(events$Opens), Clicks=sum(events$Clicks),
Sent=sum(events$Sent), Unsubs=sum(events$Unsubs),
Open.Rate=c(round(sum(events$Opens)/sum(events$Sent), 4)),
Click.Rate=c(round(sum(events$Clicks)/sum(events$Sent), 4)),
Unsub.Rate=c(round(sum(events$Unsubs)/sum(events$Sent), 4))))
nonprofit <- overall.rates[overall.rates$Category %in% c("Fund", "Reunion.Giving"), ]
nonprofit <- rbind(nonprofit,
data.frame(Category="All", Opens=sum(nonprofit$Opens), Clicks=sum(nonprofit$Clicks),
Sent=sum(nonprofit$Sent), Unsubs=sum(nonprofit$Unsubs),
Open.Rate=c(round(sum(nonprofit$Opens)/sum(nonprofit$Sent), 4)),
Click.Rate=c(round(sum(nonprofit$Clicks)/sum(nonprofit$Sent), 4)),
Unsub.Rate=c(round(sum(nonprofit$Unsubs)/sum(nonprofit$Sent), 4))
))
nonprofit$Category <- factor(nonprofit$Category, levels=nonprofit$Category)
eventsPlotO <- ggplot(events, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison, Open Rate") + geom_hline(yintercept=0.2150)
eventsPlotC <- ggplot(events, aes(Category, Click.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison, Click Rate")+ geom_hline(yintercept=0.0239)
nonprofitPlotO <- ggplot(nonprofit, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Nonprofit Industry Comparison, Open Rate")+ geom_hline(yintercept=0.2520)
nonprofitPlotC <- ggplot(nonprofit, aes(Category, Click.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Nonprofit Industry Comparison, Click Rate")+ geom_hline(yintercept=0.0284)
grid.arrange(eventsPlotO, eventsPlotC, nonprofitPlotO, nonprofitPlotC, ncol=2)
events <- overall.rates[overall.rates$Category %in% c("Alumni", "HC", "Class.Letter"),]
events <- rbind(events,
data.frame(Category="All", Opens=sum(events$Opens), Clicks=sum(events$Clicks),
Sent=sum(events$Sent), Unsubs=sum(events$Unsubs),
Open.Rate=c(round(sum(events$Opens)/sum(events$Sent), 4)),
Click.Rate=c(round(sum(events$Clicks)/sum(events$Sent), 4)),
Unsub.Rate=c(round(sum(events$Unsubs)/sum(events$Sent), 4))))
nonprofit <- overall.rates[overall.rates$Category %in% c("Fund", "Reunion.Giving"), ]
nonprofit <- rbind(nonprofit,
data.frame(Category="All", Opens=sum(nonprofit$Opens), Clicks=sum(nonprofit$Clicks),
Sent=sum(nonprofit$Sent), Unsubs=sum(nonprofit$Unsubs),
Open.Rate=c(round(sum(nonprofit$Opens)/sum(nonprofit$Sent), 4)),
Click.Rate=c(round(sum(nonprofit$Clicks)/sum(nonprofit$Sent), 4)),
Unsub.Rate=c(round(sum(nonprofit$Unsubs)/sum(nonprofit$Sent), 4))
))
eventsPlotO <- ggplot(events, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison, Open Rate") + geom_hline(yintercept=0.2150)
eventsPlotC <- ggplot(events, aes(Category, Click.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison, Click Rate")+ geom_hline(yintercept=0.0239)
nonprofitPlotO <- ggplot(nonprofit, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Nonprofit Industry Comparison, Open Rate")+ geom_hline(yintercept=0.2520)
nonprofitPlotC <- ggplot(nonprofit, aes(Category, Click.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Nonprofit Industry Comparison, Click Rate")+ geom_hline(yintercept=0.0284)
grid.arrange(eventsPlotO, eventsPlotC, nonprofitPlotO, nonprofitPlotC, ncol=2)
ggplot(events, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison\n Open Rate") + geom_hline(yintercept=0.2150) + geom_text(label="Industry average: 21.5%")
?geom_text
ggplot(events, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison\n Open Rate") + geom_hline(yintercept=0.2150) + annotate("Industry average: 21.5%", y=0.22)
ggplot(events, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison\n Open Rate") + geom_hline(yintercept=0.2150) + annotate(text="Industry average: 21.5%", y=0.22)
ggplot(events, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison\n Open Rate") + geom_hline(yintercept=0.2150) + annotate("text", label="Industry average: 21.5%", y=0.22)
ggplot(events, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison\n Open Rate") + geom_hline(yintercept=0.2150) + annotate("text", label="Industry average: 21.5%", x=1, y=0.22)
ggplot(events, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison\n Open Rate") + geom_hline(yintercept=0.2150) + annotate("text", label="Industry average: 21.5%", x=2, y=0.22)
ggplot(events, aes(Category, Click.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison\n Click Rate")+ geom_hline(yintercept=0.0239)+ annotate("text", label="Industry average: 2.39%", x=2, y=0.025)
eventsPlotO <- ggplot(events, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison\n Open Rate") + geom_hline(yintercept=0.2150) + annotate("text", label="Industry average: 21.5%", x=2, y=0.23)
eventsPlotC <- ggplot(events, aes(Category, Click.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Event Industry Comparison\n Click Rate")+ geom_hline(yintercept=0.0239)+ annotate("text", label="Industry average: 2.39%", x=2, y=0.035)
nonprofitPlotO <- ggplot(nonprofit, aes(Category, Open.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Nonprofit Industry Comparison\nOpen Rate")+ geom_hline(yintercept=0.2520)+ annotate("text", label="Industry average: 25.2%", x=2, y=0.27)
nonprofitPlotC <- ggplot(nonprofit, aes(Category, Click.Rate))+ geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Nonprofit Industry Comparison\nClick Rate")+ geom_hline(yintercept=0.0284)+ annotate("text", label="Industry average: 2.84%", x=2, y=0.035)
grid.arrange(eventsPlotO, eventsPlotC, nonprofitPlotO, nonprofitPlotC, ncol=2)
kable(overall.rates[ , c(1,4,2,3,5:8)], row.names=FALSE, caption="Email Benchmarks by Category")
sum(overall.rates$Opens)/sum(overall.rates$Sent)
sum(overall.rates$Clicks)/sum(overall.rates$Sent)
overall.rates <- cbind(total.opens, Clicks=total.clicks[,2], Sent=total.send[,2], Unsubs=total.unsub[,2])
View(overall.rates)
overall.rates <- rbind(overall.rates, data.frame(Category="Total", Sent=sum(overall.rates$Sent), Opens = sum(overall.rates$Opens), Clicks = sum(overall.rates$Clicks), Unsubs=sum(overall.rates$Unsubs)))
View(overall.rates)
overall.rates$Open.Rate <- round(overall.rates$Opens/overall.rates$Sent, 4)
overall.rates$Click.Rate <- round(overall.rates$Clicks/overall.rates$Sent, 4)
overall.rates$Unsub.Rate <- round(overall.rates$Unsubs/overall.rates$Sent, 4)
View(overall.rates)
open <- ggplot(overall.rates, aes(Category, Open.Rate)) + geom_bar(stat="identity", position="dodge", aes(fill=Category)) + theme_classic() + labs(title="Open Rates") + scale_fill_brewer(palette="Paired")+ theme(legend.position="none", axis.text.x = element_text(angle = 20, hjust = 1)) + xlab("")
click <- ggplot(overall.rates, aes(Category, Click.Rate)) + geom_bar(stat="identity", position="dodge", aes(fill=Category))+ theme_classic() + labs(title="Click Rates") + scale_fill_brewer(palette="Paired")+ theme(legend.position="none", axis.text.x = element_text(angle = 20, hjust = 1)) + xlab("")
unsub <- ggplot(overall.rates, aes(Category, Unsub.Rate)) + geom_bar(stat="identity", position="dodge", aes(fill=Category))+ theme_classic() + labs(title="Unsubscribe Rates") + scale_fill_brewer(palette="Paired")+ theme(legend.position="none", axis.text.x = element_text(angle = 20, hjust = 1)) + xlab("")
grid.arrange(open, click, unsub, ncol=3)
source('~/.active-rstudio-document', echo=TRUE)
nonprofit
overalls <- rbind(overall.rates[overall.rates$Category=="All",], events[events$Category="All Alumni", ], nonprofit[nonprofit$Category=="All Giving", ])
overalls <- rbind(overall.rates[overall.rates$Category=="All",],
events[events$Category=="All Alumni", ],
nonprofit[nonprofit$Category=="All Giving", ])
overalls
ggplot(overalls, aes(Category, Open.Rate)) + geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="") + geom_hline(yintercept=0.2150) + annotate("text", label="Industry average: 21.5%", x=2.5, y=0.25)
ggplot(overalls, aes(Category, Open.Rate)) + geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="") + geom_hline(yintercept=0.2150) + annotate("text", label="Industry average: 21.5%", x=2.5, y=0.25) + ylim(c(0,.5))
allPlotO <- ggplot(overalls, aes(Category, Open.Rate)) + geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Nonprofit industry Comparison\n Open Rate") + geom_hline(yintercept=0.2520) + annotate("text", label="Industry average: 25.2%", x=2.5, y=0.27) + ylim(c(0,.4))
allPlotC <- ggplot(overalls, aes(Category, Click.Rate)) + geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Nonprofit industry Comparison\n Click Rate") + geom_hline(yintercept=0.0284) + annotate("text", label="Industry average: 2.84%", x=2.5, y=0.04) + ylim(c(0,.4))
allPlotO
allPlotC
ggplot(overalls, aes(Category, Click.Rate)) + geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Nonprofit industry Comparison\n Click Rate") + geom_hline(yintercept=0.0284) + annotate("text", label="Industry average: 2.84%", x=2.5, y=0.04) + ylim(c(0,.1))
ggplot(overalls, aes(Category, Click.Rate)) + geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Nonprofit industry Comparison\n Click Rate") + geom_hline(yintercept=0.0284) + annotate("text", label="Industry average: 2.84%", x=2.5, y=0.04) + ylim(c(0,.06))
ggplot(nonprofit, aes(Category, Open.Rate)) + geom_bar(stat="identity", aes(fill=Category)) + scale_fill_brewer(palette="Paired") + theme_classic() + labs(title="Nonprofit Industry Comparison\nOpen Rate")+ geom_hline(yintercept=0.2520)+ annotate("text", label="Industry average: 25.2%", x=2, y=0.27)
final <- data.frame(Group=c("Alumni", "Giving"),
Possible.Categories=c("Twin Cities; Fargo-Moorhead; Regional; Homecoming/Family Weekend; Alumni (general); Class Letters; Major Events", "Annual Fund; Reunion Giving" ),
Final.Categories=c("Alumni; Homecoming/Family Weekend; Class Letters", "Annual Fund; Reunion Giving"))
kable(final, row.names=FALSE)
final <- data.frame(Group=c("Alumni", "Giving"),
Excluded.Categories=c("Twin Cities; Fargo-Moorhead; Regional; Major Events", "-" ),
Final.Categories=c("Alumni; Homecoming/Family Weekend; Class Letters", "Annual Fund; Reunion Giving"))
kable(final, row.names=FALSE)
type <- data.frame(table(imods2015$Category))
type
type <- data.frame(table(imods2015$Second.Cat))
type
type <- data.frame(addmargins(table(imods2015$Second.Cat)))
colnames(type) <- c("Category", "Number")
type
imods2015 <- read.csv("imodsfull_edited.csv", stringsAsFactors=FALSE)
imods2015 <- read.csv("/Volumes/COM/_PROJECTS/WRITING/KAYLIN/Project Analysis/Reporting/Advancement/imodsfull_edited.csv", stringsAsFactors=FALSE)
head(imods2015)
imods2015$Year <- format(imods2015$Last.Run, "%Y")
str(imods2015)
imods2015$Last.Run <- as.Date(imods2015$Last.Run, format="%Y-%m-%d")
imods2015$Year <- format(imods2015$Last.Run, "%Y")
head(imods2015)
library(ggplot2)
ggplot(imods2015, aes(Last.Run, Open.Rate)) + geom_point(aes(color=Year))
aggregate(Open.Rate ~ Year, imods2015, mean)
aggregate(Click.Rate ~ Year, imods2015, mean)
aggregate(Unsub.Rate ~ Year, imods2015, mean)
ggplot(imods2015[imods2015$Second.Cat=="Fund",], aes(Last.Run, Open.Rate)) + geom_point(aes(color=Year))
ggplot(imods2015[imods2015$Second.Cat=="Alumni",], aes(Last.Run, Open.Rate)) + geom_point(aes(color=Year))
aggregate(Open.Rate ~ Year + Second.Cat, mean)
aggregate(Open.Rate ~ Year + Second.Cat, imods2015, mean)
aggregate(Click.Rate ~ Year + Second.Cat, imods2015, mean)
ggplot(imods2015[imods2015$Second.Cat=="Alumni",], aes(Last.Run, Click.Rate)) + geom_point(aes(color=Year))
ggplot(imods2015[imods2015$Second.Cat=="Fund",], aes(Last.Run, Click.Rate)) + geom_point(aes(color=Year))
ggplot(imods2015[imods2015$Second.Cat=="Class.Letter",], aes(Last.Run, Click.Rate)) + geom_point(aes(color=Year))
ggplot(imods2015[imods2015$Second.Cat=="HC",], aes(Last.Run, Click.Rate)) + geom_point(aes(color=Year))
library(tm)
library(knitr)
library(stringr)
library(ggplot2)
opts_chunk$set(cache=TRUE, fig.width=10, echo=FALSE)
setwd("/Users/kwalker/git_projects/textmining_southpark/tidy data")
#setwd("/Users/kaylinwalker/R/textmining_southpark/tidy data")
ngrams <- read.csv("southpark_ngrams.csv", stringsAsFactors=FALSE)
count <- ngrams[ ,c(2,3,10)]
count <- ngrams[ ,c(2,3,9)]
count <- count[!duplicated(count),]
counts <- aggregate(word.total ~ ngram, count, sum)
View(counts)
unique <- data.frame(table(count$ngram)); rm(count)
counts <- cbind(counts, unique[,2])
colnames(counts) <- c("ngram.size", "total", "unique")
kable(counts, row.names=FALSE)
unigrams <- ngrams[ngrams$ngram==1, ]
characters <- unique(unigrams$speaker)
chars <- NULL
for(character in characters){
b <- unigrams[unigrams$speaker==character, ]
b <- b[1, c(1,4)]
chars <- rbind(chars, b)
}
total <- sum(chars$speaker.total)
chars$word.share <- round(chars$speaker.total/total,2)
chars <- chars[order(-chars$speaker.total), ]
chars <- chars[c(2:24,1),]
chars$speaker <- factor(chars$speaker, levels=chars$speaker)
colnames(chars) <- c("speaker", "words")
chars$speaker <- tolower(chars$speaker)
charsk <- cbind(chars[1:8,1:2], chars[9:16,1:2], chars[17:24,1:2])
kable(charsk, row.names=FALSE, caption="Number of Words by Character")
find_sig <- function(level) {
ngrams$sig <- FALSE
for(h in seq_along(ngrams[,1])) if(ngrams$LL[h] > level) ngrams$sig[h] <- TRUE
siglevel <- data.frame(table(ngrams$sig))
sigpercent <- round(siglevel$Freq[2]/sum(siglevel$Freq), 4)*100
return(sigpercent)
}
logl <- data.frame(Level=c("5%", "1%", "0.1%", "0.01%"),
Critical.Value=c(3.84, 6.63, 10.83, 15.13),
P.Value=c("0.05", "0.01", ".001", ".0001"))
for(h in 1:4) logl$Percent.Sig[h] <- find_sig(logl$Critical.Value[h])
kable(logl, row.names=FALSE, caption="Log Likelihood Significance Levels")
source('~/.active-rstudio-document', echo=TRUE)
