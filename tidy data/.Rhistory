}
}
warnings()
match
head(auE)
"corey.hansen@usbank.com" %in% auE
if(email %in% auE) {
row <- c(email, TRUE)
match <- rbind(match, row)
}
tail(match)
match <- data.frame()
for(email in ferE) {
if(email %in% auE) {
row <- data.frame(email=email, respond=TRUE)
match <- rbind(match, row)
}
}
match
write.csv(match, "responders.csv", row.names=FALSE)
library("RCurl")
library("XML")
?xml
?htmlTreeParse
html.raw <- htmlTreeParse(getURL(URL), useInternal=TRUE)
URL <- "http://www.springfieldspringfield.co.uk/view_episode_scripts.php?tv-show=the-simpsons&episode=s21e06"
html.raw <- htmlTreeParse(getURL(URL), useInternal=TRUE)
html.raw
html.parse <- xmlRoot(html.raw)
html.parse
xpathApply
?xpathApply
html.parse <- xpathApply(html.raw, "//div[@class='scrolling-script-container'", xmlValue)
html.parse <- xpathApply(html.raw, "//div[@class='scrolling-script-container']", xmlValue)
html.parse
html.parse <- xpathApply(html.raw, "//div[@class='scrolling-script-container']")
html.parse
n <- unlist(html.parse)
n
html.parse <- unlist(html.parse)
?strsplit
html.break <- strsplit(html.parse, "<br/>")
html.break <- strsplit(html.parse, "\\<br/>")
html.parse <- unlist(html.parse)
html.parse
str(html.parse)
class(html.parse)
n <- as.character(html.parse)
n
html.parse <- xpathApply(html.raw, "//div[@class='scrolling-script-container']", asText=TRUE)
html.parse <- xpathApply(html.raw, "//div[@class='scrolling-script-container']", xmlValue)
html.parse <- unlist(html.parse)
html.parse
html.break <- strsplit(html.parse, "\\\n\t\t")
html.break
html.parse <- xpathApply(html.raw, "//div[@class='scrolling-script-container']", xmlValue)
html.parse <- unlist(html.parse)
html.break <- strsplit(html.parse, "\\\n\t\t\t")
html.break
seq_along(html.break)
length(html.break)
dim(html.break)
seq_along(html.break[[1]])
u <- html.break[[1]][45]
u
speaker <- strsplit(u, "\\:")
speaker
speaker[1]
speaker[[1]]
speaker[1][[1]]
speaker[[1]][1]
container <- data.frame(episode=NULL, speaker=NULL, words=NULL)
for ( u in seq_along(html.break[[1]])) {
split <- strsplit(u, "\\:")
words <- split[[1]][1]
speaker <- split[[1]][2]
container <- rbind(container, c(episode, speaker, words))
}
html.break[[u]]
html.break[[1]]
html.break[[1]][45]
container <- data.frame(episode=NULL, speaker=NULL, words=NULL)
for ( u in seq_along(html.break[[1]])) {
split <- strsplit(html.break[[1]][u], "\\:")
words <- split[[1]][1]
speaker <- split[[1]][2]
container <- rbind(container, c(episode, speaker, words))
}
episode <- "s21e06"
for ( u in seq_along(html.break[[1]])) {
split <- strsplit(html.break[[1]][u], "\\:")
words <- split[[1]][1]
speaker <- split[[1]][2]
container <- rbind(container, c(episode, speaker, words))
}
container
split <- strsplit(html.break[[1]][u], "\\:")
words <- split[[1]][1]
speaker <- split[[1]][2]
c(episode, speaker, words)
container <- data.frame()
split <- strsplit(html.break[[1]][u], "\\:")
words <- split[[1]][2]
speaker <- split[[1]][1]
container <- rbind(container, c(episode, speaker, words))
container
split <- strsplit(html.break[[1]][u], "\\:")
words <- split[[1]][2]
speaker <- split[[1]][1]
row <- data.frame(episode=episode, speaker=speaker, words=words)
container <- rbind(container, row)
container <- data.frame()
split <- strsplit(html.break[[1]][u], "\\:")
words <- split[[1]][2]
speaker <- split[[1]][1]
row <- data.frame(episode=episode, speaker=speaker, words=words)
container <- rbind(container, row)
container
container <- data.frame()
for ( u in seq_along(html.break[[1]])) {
split <- strsplit(html.break[[1]][u], "\\:")
words <- split[[1]][2]
speaker <- split[[1]][1]
row <- data.frame(episode=episode, speaker=speaker, words=words)
container <- rbind(container, row)
}
container
View(container)
?grepl
View(container)
grepl("\\[", html.break[[1]][5])
container <- data.frame()
for ( u in seq_along(html.break[[1]])) {
split <- strsplit(html.break[[1]][u], "\\:")
words <- split[[1]][2]
speaker <- split[[1]][1]
if (grepl("\\[", html.break[[1]][u])) {
} else {
row <- data.frame(episode=episode, speaker=speaker, words=words)
container <- rbind(container, row)
}
}
View(container)
container <- data.frame()
for ( u in seq_along(html.break[[1]])) {
split <- strsplit(html.break[[1]][u], "\\:")
words <- split[[1]][2]
speaker <- split[[1]][1]
if (grepl("\\[", speaker)) {
} else {
row <- data.frame(episode=episode, speaker=speaker, words=words)
container <- rbind(container, row)
}
}
View(container)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
imodsfull <- read.csv("/Volumes/COM/_PROJECTS/WRITING/KAYLIN/Reporting/Advancement/imods_full.csv", stringsAsFactors=FALSE)
imodsfull <- read.csv("/Volumes/COM/_PROJECTS/WRITING/KAYLIN/Project Analysis/Reporting/Advancement/imods_full.csv", stringsAsFactors=FALSE)
source('~/.active-rstudio-document', echo=TRUE)
table(imods2015$My.Cat)
kable(clacompare, row.names=FALSE, caption="rate t-test results for class letters vs. other")
cg <- imods2015[imods2015$My.Cat=="CobbersGive", ]
fund <- imods2015[imods2015$My.Cat=="Fund", ]
t.test(cg$Open.Rate, fund$Open.Rate)
t.test(cg$Click.Rate, fund$Click.Rate)
source('~/.active-rstudio-document', echo=TRUE)
table(imods2015$My.Cat)
View(imods2015)
View(imods2015)
library(tm)
library(knitr)
library(stringr)
library(ggplot2)
library(gridExtra)
opts_chunk$set(cache=TRUE, echo=FALSE, fig.width=10, fig.height=4)
imodsfull <- read.csv("/Volumes/COM/_PROJECTS/WRITING/KAYLIN/Project Analysis/Reporting/Advancement/imods_full.csv", stringsAsFactors=FALSE)
imodsfull$Unsub.Rate <- round(imodsfull$Unsubscribes/imodsfull$Sent, 4)
imodsfull$Click.Rate <- round(imodsfull$Clicks/imodsfull$Sent, 2)
imodsfull$Open.Rate <- round(imodsfull$Opens/imodsfull$Sent, 2)
imodsfull$Last.Run <- as.Date(imodsfull$Last.Run, format="%m/%d/%y")
imodsfull <- imodsfull[imodsfull$Sent > 100, ]
imods116 <- imodsfull[imodsfull$Last.Run >= as.Date("2016-01-01"),c(12,2:4,13:15)]
imods2015 <- imodsfull[imodsfull$Last.Run < as.Date("2016-01-01"),c(12,2:4,13:15)]
View(imods2015)
source('~/.active-rstudio-document', echo=TRUE)
kable(clacompare, row.names=FALSE, caption="rate t-test results for class letters vs. other")
kable(hcalucompare, row.names=FALSE, caption="rate t-test results for major events vs. other")
table(imods2015$My.Cat)
fund
library(tm)
library(knitr)
library(stringr)
library(ggplot2)
library(gridExtra)
opts_chunk$set(cache=TRUE, echo=FALSE, fig.width=10, fig.height=4)
imodsfull <- read.csv("/Volumes/COM/_PROJECTS/WRITING/KAYLIN/Project Analysis/Reporting/Advancement/imods_full.csv", stringsAsFactors=FALSE)
imodsfull$Unsub.Rate <- round(imodsfull$Unsubscribes/imodsfull$Sent, 4)
imodsfull$Click.Rate <- round(imodsfull$Clicks/imodsfull$Sent, 2)
imodsfull$Open.Rate <- round(imodsfull$Opens/imodsfull$Sent, 2)
imodsfull$Last.Run <- as.Date(imodsfull$Last.Run, format="%m/%d/%y")
imodsfull <- imodsfull[imodsfull$Sent > 100, ]
imods116 <- imodsfull[imodsfull$Last.Run >= as.Date("2016-01-01"),c(12,2:4,13:15)]
imods2015 <- imodsfull[imodsfull$Last.Run < as.Date("2016-01-01"),c(12,2:4,13:15)]
rg <- imods2015[imods2015$My.Cat=="Reunion.Giving", ]
fund <- imods2015[imods2015$My.Cat=="Fund", ]
t.test(rg$Open.Rate, fund$Open.Rate)
t.test(rg$Click.Rate, fund$Click.Rate)
View(imods2015)
source('~/.active-rstudio-document', echo=TRUE)
rgfO <- t.test(rg$Open.Rate, fund$Open.Rate) # yes, p = .00001396
rgfO
library(tm)
library(knitr)
library(stringr)
library(ggplot2)
library(gridExtra)
opts_chunk$set(cache=TRUE, echo=FALSE, fig.width=10, fig.height=4)
imodsfull <- read.csv("/Volumes/COM/_PROJECTS/WRITING/KAYLIN/Project Analysis/Reporting/Advancement/imods_full.csv", stringsAsFactors=FALSE)
imodsfull$Unsub.Rate <- round(imodsfull$Unsubscribes/imodsfull$Sent, 4)
imodsfull$Click.Rate <- round(imodsfull$Clicks/imodsfull$Sent, 2)
imodsfull$Open.Rate <- round(imodsfull$Opens/imodsfull$Sent, 2)
imodsfull$Last.Run <- as.Date(imodsfull$Last.Run, format="%m/%d/%y")
imodsfull <- imodsfull[imodsfull$Sent > 100, ]
imods116 <- imodsfull[imodsfull$Last.Run >= as.Date("2016-01-01"),c(12,2:4,13:15)]
imods2015 <- imodsfull[imodsfull$Last.Run < as.Date("2016-01-01"),c(12,2:4,13:15)]
tc <- imods2015[imods2015$My.Cat=="TC", ]
fm <- imods2015[imods2015$My.Cat=="FM", ]
regional <- imods2015[imods2015$My.Cat=="Regional", ]
tcfmO <- t.test(tc$Open.Rate, fm$Open.Rate) # no
tcfmC <- t.test(tc$Click.Rate, fm$Click.Rate) # no
tcregO <- t.test(tc$Open.Rate, regional$Open.Rate) # no
tcregC <- t.test(tc$Click.Rate, regional$Click.Rate) # maybe, p = 0.0007
fmregO <- t.test(fm$Open.Rate, regional$Open.Rate) # no
fmregC <- t.test(fm$Click.Rate, regional$Click.Rate) # no
conf.print <- function(ttest) { str_c(round(ttest$conf.int,4), collapse=" ") }
open.rates <- data.frame(Type=c(rep("OPEN", 3)), Group=c("TC vs. FM", "TC vs. Regional", "FM vs. Regional"),
CI=c( conf.print(tcfmO), conf.print(tcregO), conf.print(fmregO)),
p.value=c( tcfmO$p.value, tcregO$p.value, fmregO$p.value),
significant=c( FALSE, FALSE, FALSE))
click.rates <- data.frame(Type=c(rep("CLICK", 3)), Group=c("TC vs. FM", "TC vs. Regional", "FM vs. Regional"),
CI=c( conf.print(tcfmC), conf.print(tcregC), conf.print(fmregC)),
p.value=c( tcfmC$p.value, tcregC$p.value, fmregC$p.value),
significant=c( FALSE, TRUE, FALSE))
kable(rbind(open.rates, click.rates), row.names=FALSE, caption="t-test results for geographic areas")
for(u in seq_along(imods2015[,1])) {
if(imods2015$My.Cat[u] == "FM") imods2015$My.Cat[u] <- "Not TC"
if(imods2015$My.Cat[u] == "Regional") imods2015$My.Cat[u] <- "Not TC"
}
source('~/.active-rstudio-document', echo=TRUE)
rg <- imods2015[imods2015$My.Cat=="Reunion.Giving", ]
fund <- imods2015[imods2015$My.Cat=="Fund", ]
rgfO <- t.test(rg$Open.Rate, fund$Open.Rate) # yes, p = .00001396
rgfC <- t.test(rg$Click.Rate, fund$Click.Rate) # no
rgfcompare <- data.frame(Type=c("OPEN", "CLICK"),
CI=c(conf.print(rgfO), conf.print(rgfC)),
p.value=c(rgfO$p.value, rgfC$p.value),
sig=c(TRUE, FALSE))
kable(rgfcompare, row.names=FALSE, caption="rate t-test results for reunion giving vs. other")
rg <- imods2015[imods2015$My.Cat=="Reunion.Giving", ]
fund <- imods2015[imods2015$My.Cat=="Fund", ]
fund
rg
rgfO <- t.test(rg$Open.Rate, fund$Open.Rate)
rgfC <- t.test(rg$Click.Rate, fund$Click.Rate)
rg <- imods2015[imods2015$My.Cat=="Reunion.Giving", ]
af <- imods2015[imods2015$My.Cat=="Fund", ]
rgfO <- t.test(rg$Open.Rate, af$Open.Rate)
rgfC <- t.test(rg$Click.Rate, af$Click.Rate)
rgfO
rg2 <- imods2015[imods2015$My.Cat=="Reunion.Giving", ]
af <- imods2015[imods2015$My.Cat=="Fund", ]
str(rg2)
str(af)
View(rg)
View(af)
library(tm)
library(knitr)
library(stringr)
library(ggplot2)
library(gridExtra)
opts_chunk$set(cache=TRUE, echo=FALSE, fig.width=10, fig.height=4)
imodsfull <- read.csv("/Volumes/COM/_PROJECTS/WRITING/KAYLIN/Project Analysis/Reporting/Advancement/imods_full.csv", stringsAsFactors=FALSE)
imodsfull$Unsub.Rate <- round(imodsfull$Unsubscribes/imodsfull$Sent, 4)
imodsfull$Click.Rate <- round(imodsfull$Clicks/imodsfull$Sent, 2)
imodsfull$Open.Rate <- round(imodsfull$Opens/imodsfull$Sent, 2)
imodsfull$Last.Run <- as.Date(imodsfull$Last.Run, format="%m/%d/%y")
imodsfull <- imodsfull[imodsfull$Sent > 100, ]
imods116 <- imodsfull[imodsfull$Last.Run >= as.Date("2016-01-01"),c(12,2:4,13:15)]
imods2015 <- imodsfull[imodsfull$Last.Run < as.Date("2016-01-01"),c(12,2:4,13:15)]
tc <- imods2015[imods2015$My.Cat=="TC", ]
fm <- imods2015[imods2015$My.Cat=="FM", ]
regional <- imods2015[imods2015$My.Cat=="Regional", ]
tcfmO <- t.test(tc$Open.Rate, fm$Open.Rate) # no
tcfmC <- t.test(tc$Click.Rate, fm$Click.Rate) # no
tcregO <- t.test(tc$Open.Rate, regional$Open.Rate) # no
tcregC <- t.test(tc$Click.Rate, regional$Click.Rate) # maybe, p = 0.0007
fmregO <- t.test(fm$Open.Rate, regional$Open.Rate) # no
fmregC <- t.test(fm$Click.Rate, regional$Click.Rate) # no
conf.print <- function(ttest) { str_c(round(ttest$conf.int,4), collapse=" ") }
open.rates <- data.frame(Type=c(rep("OPEN", 3)), Group=c("TC vs. FM", "TC vs. Regional", "FM vs. Regional"),
CI=c( conf.print(tcfmO), conf.print(tcregO), conf.print(fmregO)),
p.value=c( tcfmO$p.value, tcregO$p.value, fmregO$p.value),
significant=c( FALSE, FALSE, FALSE))
click.rates <- data.frame(Type=c(rep("CLICK", 3)), Group=c("TC vs. FM", "TC vs. Regional", "FM vs. Regional"),
CI=c( conf.print(tcfmC), conf.print(tcregC), conf.print(fmregC)),
p.value=c( tcfmC$p.value, tcregC$p.value, fmregC$p.value),
significant=c( FALSE, TRUE, FALSE))
kable(rbind(open.rates, click.rates), row.names=FALSE, caption="t-test results for geographic areas")
for(u in seq_along(imods2015[,1])) {
if(imods2015$My.Cat[u] == "FM") imods2015$My.Cat[u] <- "Not TC"
if(imods2015$My.Cat[u] == "Regional") imods2015$My.Cat[u] <- "Not TC"
}
nottc <- rbind(fm, regional)
tcnottcO <- t.test(tc$Open.Rate, nottc$Open.Rate) # no
tcnottcC <- t.test(tc$Click.Rate, nottc$Click.Rate) # no
tccompare <- data.frame(Type=c("OPEN", "CLICK"),
CI=c(conf.print(tcnottcO), conf.print(tcnottcC)),
pvalue=c(tcnottcO$p.value, tcnottcC$p.value),
sig=c(FALSE, TRUE))
kable(tccompare, row.names=FALSE, caption="rate t-test results for TC vs. Not TC")
boxplot <- ggplot(imods2015[imods2015$My.Cat %in% c("Not TC", "TC"), ], aes(My.Cat, Click.Rate)) + geom_boxplot() + theme_classic() + xlab("Category") + labs(title="Click Rate by Category")
scatter <- ggplot(imods2015[imods2015$My.Cat %in% c("Not TC", "TC"),], aes(Sent, Click.Rate)) + geom_point(aes(color=My.Cat))+ theme_classic() + labs(title="Click Rate by List Size")
grid.arrange(boxplot, scatter, ncol=2)
for(u in seq_along(imods2015[,1])) {
if(imods2015$My.Cat[u] == "Not TC") imods2015$My.Cat[u] <- "Alumni"
if(imods2015$My.Cat[u] == "TC") imods2015$My.Cat[u] <- "Alumni"
}
hc <- imods2015[imods2015$My.Cat=="HC", ]
alu <- imods2015[imods2015$My.Cat=="Alumni", ]
hcaO <- t.test(hc$Open.Rate, alu$Open.Rate) # no
hcaC <- t.test(hc$Click.Rate, alu$Click.Rate) # no
hcalucompare <- data.frame(Type=c("OPEN", "CLICK"),
CI=c(conf.print(hcaO), conf.print(hcaC)),
p.value=c(hcaO$p.value, hcaC$p.value),
sig=c(FALSE, FALSE))
kable(hcalucompare, row.names=FALSE, caption="rate t-test results for major events vs. other")
for(u in seq_along(imods2015[,1])) { if(imods2015$My.Cat[u] == "HC") imods2015$My.Cat[u] <- "Alumni" }
cl <- imods2015[imods2015$My.Cat=="Class.Letter", ]
alu <- imods2015[imods2015$My.Cat=="Alumni", ]
claO <- t.test(cl$Open.Rate, alu$Open.Rate) # no
claC <- t.test(cl$Click.Rate, alu$Click.Rate) # no
clacompare <- data.frame(Type=c("OPEN", "CLICK"),
CI=c(conf.print(claO), conf.print(claC)),
p.value=c(claO$p.value, claC$p.value),
sig=c(FALSE, TRUE))
kable(clacompare, row.names=FALSE, caption="rate t-test results for class letters vs. other")
rg2 <- imods2015[imods2015$My.Cat=="Reunion.Giving", ]
af <- imods2015[imods2015$My.Cat=="Fund", ]
rgfO <- t.test(rg2$Open.Rate, af$Open.Rate)
rgfC <- t.test(rg2$Click.Rate, af$Click.Rate)
rgfcompare <- data.frame(Type=c("OPEN", "CLICK"),
CI=c(conf.print(rgfO), conf.print(rgfC)),
p.value=c(rgfO$p.value, rgfC$p.value),
sig=c(TRUE, FALSE))
kable(rgfcompare, row.names=FALSE, caption="rate t-test results for reunion giving vs. other")
View(imods2015)
?t.test
unqiue(imods2015$My.Cat)
unique(imods2015$My.Cat)
rg2 <- imods2015[imods2015$My.Cat=="Reunion.Giving", ]
af <- imods2015[imods2015$My.Cat=="Fund", ]
t.test(rg2$Open.Rate, af$Open.Rate)
t.test(rg2$Click.Rate, af$Click.Rate)
rgfcompare <- data.frame(Type=c("OPEN", "CLICK"),
CI=c(conf.print(rgfO), conf.print(rgfC)),
p.value=c(rgfO$p.value, rgfC$p.value),
sig=c(TRUE, FALSE))
kable(rgfcompare, row.names=FALSE, caption="rate t-test results for reunion giving vs. other")
a <- imods2015[imods2015$My.Cat=="Fund", ]
b <- imods2015[imods2015$My.Cat=="Reunion.Giving", ]
View(b)
hcaO <- t.test(a$Open.Rate, b$Open.Rate, paired=FALSE) # no
hcaC <- t.test(a$Click.Rate, b$Click.Rate) # no
View(b)
str(b)
summary(b)
b <- imods2015[imods2015$My.Cat=="Reunion.Giving", 7]
hcaO <- t.test(a$Open.Rate, b$Open.Rate, paired=FALSE) # no
a <- imods2015[imods2015$My.Cat=="Fund", ]
b <- imods2015[imods2015$My.Cat=="Reunion.Giving", 7]
hcaO <- t.test(a$Open.Rate, b, paired=FALSE) # no
hcaC <- t.test(a$Click.Rate, b, paired=FALSE) # no
rgfcompare <- data.frame(Type=c("OPEN", "CLICK"),
CI=c(conf.print(rgfO), conf.print(rgfC)),
p.value=c(rgfO$p.value, rgfC$p.value),
sig=c(TRUE, FALSE))
kable(rgfcompare, row.names=FALSE, caption="rate t-test results for reunion giving vs. other")
ggplot(imods2015[imods2015$My.Cat %in% c("Fund", "Reunion.Giving"),], aes(Click.Rate, Open.Rate)) + geom_point(color=My.Cat)
ggplot(imods2015[imods2015$My.Cat %in% c("Fund", "Reunion.Giving"),], aes(Click.Rate, Open.Rate)) + geom_point(aes(color=My.Cat))
a <- imods2015[imods2015$My.Cat=="Fund", ]
b <- imods2015[imods2015$My.Cat=="Reunion.Giving", 7]
hcaO <- t.test(a$Open.Rate, b, paired=FALSE) # no
hcaC <- t.test(a$Click.Rate, b, paired=FALSE) # no
hcaC
b
str(b)
class(b)
a <- imods2015[imods2015$My.Cat=="Fund", 6:7]
b <- imods2015[imods2015$My.Cat=="Reunion.Giving", 6:7]
hcaO <- t.test(a$Open.Rate, b$Open.Rate, paired=FALSE) # no
hcaC <- t.test(a$Click.Rate, b$Click.Rate, paired=FALSE) # no
rgfcompare <- data.frame(Type=c("OPEN", "CLICK"),
CI=c(conf.print(rgfO), conf.print(rgfC)),
p.value=c(rgfO$p.value, rgfC$p.value),
sig=c(TRUE, FALSE))
kable(rgfcompare, row.names=FALSE, caption="rate t-test results for reunion giving vs. other")
a <- imods2015[imods2015$My.Cat=="Fund", 6:7]
b <- imods2015[imods2015$My.Cat=="Class.Letter", 6:7]
hcaO <- t.test(a$Open.Rate, b$Open.Rate)
table(imods2015$My.Cat)
br <- imods2015[imods2015$My.Cat=="Broad", ]
t.test(br$Open.Rate, alu$Open.Rate)
t.test(br$Open.Rate, fund$Open.Rate)
t.test(br$Open.Rate, b$Open.Rate)
t.test(br$Click.Rate, b$Click.Rate)
t.test(br$Click.Rate, alu$Click.Rate)
t.test(br$Open.Rate, alu$Open.Rate)
library(knitr)
library(stringr)
library(ggplot2)
library(RColorBrewer)
opts_chunk$set(cache=TRUE, fig.width=10, fig.height=8, echo=FALSE)
library(knitr)
library(stringr)
library(ggplot2)
library(RColorBrewer)
opts_chunk$set(cache=TRUE, fig.width=10, fig.height=8, echo=FALSE)
setwd("/Users/kaylinwalker/R/textmining_southpark/tidy data")
ngrams <- read.csv("southpark_ngrams.csv", stringsAsFactors=FALSE)
main.speakers <- c("CARTMAN", "STAN", "KYLE", "KENNY", "RANDY", "BUTTERS", "MR..GARRISON")
ngrams <- ngrams[abs(ngrams$LL) >= 10.83, ] # 1073 / 21106 = 5%  // 1477/75552 = 1.9%
ngrams.main <- ngrams[ngrams$speaker %in% main.speakers, ] # 732/1477 = 49.5%
## remove redundant ngrams like "you guys" vs. "you guys i" and "guys you guys"
ngrams.norepeat <- ngrams[ngrams$ngram==1, ]
bi <- ngrams[ngrams$ngram == 2, ]
bi <- unique(bi$word)
for(h in seq_along(bi)) {
for(s in main.speakers) {
temp <- ngrams[grepl(bi[h], ngrams$word) & ngrams$speaker==s, ]
if(length(temp[,1]) > 0 ) {
temp <- temp[order(-temp$LL), ]
ngrams.norepeat <- rbind(ngrams.norepeat, temp[1,])
}
}
}
ngrams.norepeat <- unique(ngrams.norepeat)
ngrams.main <- ngrams.main[ngrams.main$speaker %in% c("CARTMAN", "STAN", "KYLE", "KENNY"), ]
ngrams.main <- ngrams.main[ngrams.main$speaker %in% c( "KYLE", "KENNY"), ]
ggplot(ngrams.main, aes(LL, speaker)) +
geom_point(color="white") +
geom_text_repel(aes(label=ngrams.main$word, size=log(ngrams.main$word.total),
color=ngrams.main$speaker), alpha=0.75) +
scale_size(range=c(5,10)) +
scale_color_brewer(palette="Paired") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, hjust = 1), legend.position=1) +
labs(title="Most Characteristic Words & Phrases by Character") +
xlab("") + ylab("Log(Log Likelihood)") + xlim(c(-200,200))
```
library(ggrepel)
ngrams.main <- ngrams.main[ngrams.main$speaker %in% c( "KENNY"), ]
ggplot(ngrams.main, aes(LL, speaker)) +
geom_point(color="white") +
geom_text_repel(aes(label=ngrams.main$word, size=log(ngrams.main$word.total),
color=ngrams.main$speaker), alpha=0.75) +
scale_size(range=c(5,10)) +
scale_color_brewer(palette="Paired") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, hjust = 1), legend.position=1) +
labs(title="Most Characteristic Words & Phrases by Character") +
xlab("") + ylab("Log(Log Likelihood)") + xlim(c(-200,200))
ggplot(ngrams.main, aes(LL, speaker)) +
geom_point(color="white") +
geom_text_repel(aes(label=ngrams.main$word, size=log(ngrams.main$word.total),
color=ngrams.main$speaker), alpha=0.75) +
scale_size(range=c(5,10)) +
scale_color_brewer(palette="Paired") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, hjust = 1), legend.position=1) +
labs(title="Most Characteristic Words & Phrases by Character") +
xlab("") + ylab("Log(Log Likelihood)")
ggplot(ngrams.main, aes(LL, speaker)) +
geom_point(color="white") +
geom_text_repel(aes(label=ngrams.main$word, fill=ngrams.main$speaker),
box.padding = unit(0.25, "lines")) +
scale_size(range=c(5,10)) +
scale_color_brewer(palette="Paired") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, hjust = 1), legend.position=1) +
labs(title="Most Characteristic Words & Phrases by Character") +
xlab("") + ylab("Log(Log Likelihood)")
ggplot(ngrams.main, aes(LL, speaker)) +
geom_point(color="white") +
geom_text_repel(aes(label=ngrams.main$word, fill=factor(speaker)),
box.padding = unit(0.25, "lines")) +
scale_size(range=c(5,10)) +
scale_color_brewer(palette="Paired") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, hjust = 1), legend.position=1) +
labs(title="Most Characteristic Words & Phrases by Character") +
xlab("") + ylab("Log(Log Likelihood)")
ggplot(ngrams.main, aes(speaker, LL)) +
geom_point(color="white") +
geom_text_repel(aes(label=ngrams.main$word, fill=factor(speaker)),
box.padding = unit(0.25, "lines")) +
scale_size(range=c(5,10)) +
scale_color_brewer(palette="Paired") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, hjust = 1), legend.position=1) +
labs(title="Most Characteristic Words & Phrases by Character") +
xlab("") + ylab("Log(Log Likelihood)")
